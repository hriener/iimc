# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@ZCHAFF_TRUE@am__append_1 = src/sat/zchaff
bin_PROGRAMS = iimc$(EXEEXT)
check_PROGRAMS = test_Util$(EXEEXT) test_Model$(EXEEXT) \
	test_Parser$(EXEEXT) test_SAT$(EXEEXT) \
	test_TruthTables$(EXEEXT) test_ISOP$(EXEEXT) \
	test_Prop$(EXEEXT) test_Auto$(EXEEXT)
TESTS = test_Util$(EXEEXT) test_Model$(EXEEXT) test_Parser$(EXEEXT) \
	test_SAT$(EXEEXT) test_TruthTables$(EXEEXT) test_ISOP$(EXEEXT) \
	$(check_SCRIPTS)
DIST_COMMON = $(top_srcdir)/src/util/util.make \
	$(top_srcdir)/src/expressions/expressions.make \
	$(top_srcdir)/src/model/model.make \
	$(top_srcdir)/src/sim/sim.make \
	$(top_srcdir)/src/parser/parser.make \
	$(top_srcdir)/src/sat/sat.make $(top_srcdir)/src/opt/opt.make \
	$(top_srcdir)/src/copt/copt.make \
	$(top_srcdir)/src/sopt/sopt.make \
	$(top_srcdir)/src/truthtable/truthtable.make \
	$(top_srcdir)/src/cnf/cnf.make \
	$(top_srcdir)/src/properties/properties.make \
	$(top_srcdir)/src/automata/automata.make \
	$(top_srcdir)/src/mc/mc.make $(top_srcdir)/src/main/main.make \
	$(top_srcdir)/aminclude.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(srcdir)/config.h.in \
	$(srcdir)/Doxyfile.in src/properties/PropCtlScanner.cc \
	src/properties/PropCtlParser.cc src/automata/AutoScanner.cc \
	src/automata/AutoParser.cc $(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/ylwrap $(dist_check_DATA) \
	$(top_srcdir)/build-aux/test-driver NEWS README \
	build-aux/ar-lib build-aux/compile build-aux/config.guess \
	build-aux/config.sub build-aux/depcomp build-aux/install-sh \
	build-aux/missing build-aux/ylwrap \
	$(top_srcdir)/build-aux/ar-lib $(top_srcdir)/build-aux/compile \
	$(top_srcdir)/build-aux/config.guess \
	$(top_srcdir)/build-aux/config.sub \
	$(top_srcdir)/build-aux/install-sh \
	$(top_srcdir)/build-aux/missing
@ZCHAFF_TRUE@am__append_2 = \
@ZCHAFF_TRUE@    src/sat/SAT_zchaff.cpp \
@ZCHAFF_TRUE@    src/sat/SAT_zchaff.h

@ZCHAFF_TRUE@am__append_3 = src/sat/zchaff/libsat.a
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_regex.m4 \
	$(top_srcdir)/m4/m4_ax_boost_system.m4 \
	$(top_srcdir)/m4/m4_ax_boost_thread.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = Doxyfile
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__iimc_SOURCES_DIST = src/util/UtilSystem.cpp src/util/Random.cpp \
	src/util/Util.h src/util/Error.h src/util/BitTricks.h \
	src/util/Random.h src/expressions/Expr.cpp \
	src/expressions/ExprUtil.cpp src/expressions/Expr.h \
	src/expressions/ExprUtil.h src/expressions/ExprNode.h \
	src/expressions/ExprTypes.h src/expressions/ExprBdd.cpp \
	src/expressions/ExprBdd.h src/expressions/ExprVerilog.cpp \
	src/expressions/ExprVerilog.h \
	src/expressions/HashedStructure.h \
	src/expressions/ExprAttachment.h \
	src/expressions/ExprAttachment.cpp src/model/Key.h \
	src/model/Model.cpp src/model/Model.h src/sim/Sim.cpp \
	src/sim/Sim.h src/sim/ThreeValuedSimulation.cpp \
	src/sim/ThreeValuedSimulation.h src/parser/AIGER.cpp \
	src/parser/AIGER.h src/parser/DIMACS.cpp src/parser/DIMACS.h \
	src/parser/aiger19.h src/parser/aiger19.c src/sat/SAT.cpp \
	src/sat/SAT_minisat.cpp src/sat/SAT_minisat.h src/sat/SAT.h \
	src/sat/SAT_zchaff.cpp src/sat/SAT_zchaff.h \
	src/opt/BddAttachment.h src/opt/BddAttachment.cpp \
	src/opt/BddTrAttachment.h src/opt/BddTrAttachment.cpp \
	src/copt/SATSweep.cpp src/copt/SATSweep.h \
	src/copt/CombAttachment.cpp src/copt/CombAttachment.h \
	src/copt/AIGUtil.cpp src/copt/AIGUtil.h src/copt/AIG.cpp \
	src/copt/AIG.h src/copt/AIGAttachment.cpp \
	src/copt/AIGAttachment.h src/copt/UniqueIntegralType.h \
	src/copt/CutSweep.cpp src/copt/CutSweep.h \
	src/sopt/SeqAttachment.h src/sopt/SeqAttachment.cpp \
	src/sopt/SequentialEquivalence.h \
	src/sopt/SequentialEquivalence.cpp src/sopt/StuckAt.h \
	src/sopt/StuckAt.cpp src/sopt/Simplifier.h \
	src/sopt/Simplifier.cpp src/sopt/PhaseAbstraction.h \
	src/sopt/PhaseAbstraction.cpp src/sopt/AbsInt.h \
	src/sopt/AbsInt.cpp src/sopt/Slice.h src/sopt/Slice.cpp \
	src/sopt/Decode.h src/sopt/Decode.cpp \
	src/truthtable/TreeTruthTable.h \
	src/truthtable/TreeTruthTable.cpp \
	src/truthtable/TurboTruthTable.h \
	src/truthtable/BitTruthTable.h \
	src/truthtable/BitTruthTable.cpp src/cnf/ISOP.h \
	src/cnf/Cover.h src/cnf/TechMapCNF.h src/cnf/TechMapCNF.cpp \
	src/cnf/CNFTestAction.h src/cnf/CNFDummyAction.h \
	src/cnf/CNFAttachment.h src/cnf/CNFAttachment.cpp \
	src/cnf/DIMACSAction.h src/cnf/DIMACSAction.cpp \
	src/cnf/NiceDAG.h src/cnf/NiceDAG.cpp src/cnf/Cut.h \
	src/cnf/CutAlgorithm.h src/cnf/Cover.cpp src/cnf/SimplifyCNF.h \
	src/cnf/SimplifyCNF.cpp src/cnf/StringTR.h \
	src/cnf/StringTR.cpp src/properties/PropCtlWrapper.h \
	src/properties/PropCtlScanner.ll \
	src/properties/PropCtlParser.yy src/properties/PropCtlDriver.h \
	src/properties/PropCtlDriver.cpp src/automata/Automaton.h \
	src/automata/AutoWrapper.h src/automata/AutoScanner.ll \
	src/automata/AutoParser.yy src/automata/AutoDriver.h \
	src/automata/AutoDriver.cpp src/mc/MC.h src/mc/BMC.cpp \
	src/mc/BMC.h src/mc/COI.h src/mc/COI.cpp src/mc/IC3.h \
	src/mc/IC3.cpp src/mc/FSIS.h src/mc/BddReach.h \
	src/mc/BddReach.cpp src/mc/TacticMisc.h src/mc/TacticMisc.cpp \
	src/mc/ProofAttachment.h src/mc/ProofAttachment.cpp \
	src/mc/RchAttachment.h src/mc/RchAttachment.cpp src/mc/Fair.h \
	src/mc/Fair.cpp src/mc/IICTL.h src/mc/IICTL.cpp src/mc/FCBMC.h \
	src/mc/FCBMC.cpp src/mc/IIC.h src/mc/IIC.cpp src/mc/BddGSH.h \
	src/mc/BddGSH.cpp src/mc/Persist.h src/mc/Persist.cpp \
	src/mc/KLive.h src/mc/KLive.cpp src/main/options.cpp \
	src/main/main.cpp src/main/Dispatch.cpp src/main/Engine.cpp \
	src/main/options.h src/main/Dispatch.h src/main/Engine.h \
	src/main/Verbosity.h
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = src/util/UtilSystem.$(OBJEXT) \
	src/util/Random.$(OBJEXT)
am__objects_2 = src/expressions/Expr.$(OBJEXT) \
	src/expressions/ExprUtil.$(OBJEXT) \
	src/expressions/ExprBdd.$(OBJEXT) \
	src/expressions/ExprVerilog.$(OBJEXT)
am__objects_3 = src/expressions/ExprAttachment.$(OBJEXT)
am__objects_4 = src/model/Model.$(OBJEXT)
am__objects_5 = src/sim/Sim.$(OBJEXT) \
	src/sim/ThreeValuedSimulation.$(OBJEXT)
am__objects_6 = src/parser/AIGER.$(OBJEXT) src/parser/DIMACS.$(OBJEXT) \
	src/parser/aiger19.$(OBJEXT)
@ZCHAFF_TRUE@am__objects_7 = src/sat/SAT_zchaff.$(OBJEXT)
am__objects_8 = src/sat/SAT.$(OBJEXT) src/sat/SAT_minisat.$(OBJEXT) \
	$(am__objects_7)
am__objects_9 = src/opt/BddAttachment.$(OBJEXT) \
	src/opt/BddTrAttachment.$(OBJEXT)
am__objects_10 = src/copt/AIGUtil.$(OBJEXT) src/copt/AIG.$(OBJEXT) \
	src/copt/AIGAttachment.$(OBJEXT)
am__objects_11 = src/copt/CutSweep.$(OBJEXT)
am__objects_12 = src/copt/SATSweep.$(OBJEXT) \
	src/copt/CombAttachment.$(OBJEXT) $(am__objects_10) \
	$(am__objects_11)
am__objects_13 = src/sopt/SeqAttachment.$(OBJEXT) \
	src/sopt/SequentialEquivalence.$(OBJEXT) \
	src/sopt/StuckAt.$(OBJEXT) src/sopt/Simplifier.$(OBJEXT) \
	src/sopt/PhaseAbstraction.$(OBJEXT) src/sopt/AbsInt.$(OBJEXT) \
	src/sopt/Slice.$(OBJEXT) src/sopt/Decode.$(OBJEXT)
am__objects_14 = src/truthtable/TreeTruthTable.$(OBJEXT) \
	src/truthtable/BitTruthTable.$(OBJEXT)
am__objects_15 = src/cnf/TechMapCNF.$(OBJEXT) \
	src/cnf/CNFAttachment.$(OBJEXT) src/cnf/DIMACSAction.$(OBJEXT) \
	src/cnf/NiceDAG.$(OBJEXT) src/cnf/Cover.$(OBJEXT) \
	src/cnf/SimplifyCNF.$(OBJEXT) src/cnf/StringTR.$(OBJEXT)
am__objects_16 = src/properties/PropCtlScanner.$(OBJEXT) \
	src/properties/PropCtlParser.$(OBJEXT) \
	src/properties/PropCtlDriver.$(OBJEXT)
am__objects_17 = src/automata/AutoScanner.$(OBJEXT) \
	src/automata/AutoParser.$(OBJEXT) \
	src/automata/AutoDriver.$(OBJEXT)
am__objects_18 = src/mc/BMC.$(OBJEXT) src/mc/COI.$(OBJEXT) \
	src/mc/IC3.$(OBJEXT) src/mc/BddReach.$(OBJEXT) \
	src/mc/TacticMisc.$(OBJEXT) src/mc/ProofAttachment.$(OBJEXT) \
	src/mc/RchAttachment.$(OBJEXT) src/mc/Fair.$(OBJEXT) \
	src/mc/IICTL.$(OBJEXT) src/mc/FCBMC.$(OBJEXT) \
	src/mc/IIC.$(OBJEXT) src/mc/BddGSH.$(OBJEXT) \
	src/mc/Persist.$(OBJEXT) src/mc/KLive.$(OBJEXT)
am__objects_19 = src/main/options.$(OBJEXT) src/main/main.$(OBJEXT) \
	src/main/Dispatch.$(OBJEXT) src/main/Engine.$(OBJEXT)
am_iimc_OBJECTS = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_8) $(am__objects_9) $(am__objects_12) \
	$(am__objects_13) $(am__objects_14) $(am__objects_15) \
	$(am__objects_16) $(am__objects_17) $(am__objects_18) \
	$(am__objects_19)
iimc_OBJECTS = $(am_iimc_OBJECTS)
iimc_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
iimc_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) src/cudd/libobj.a src/cudd/libcudd.a \
	src/cudd/libepd.a src/cudd/libmtr.a src/cudd/libst.a \
	src/cudd/libutil.a src/sat/minisat20/libminisat20.a \
	src/sat/minisat/libminisat.a $(am__append_3)
am_test_Auto_OBJECTS = src/automata/test_Auto.$(OBJEXT) \
	$(am__objects_17) $(am__objects_2) $(am__objects_4) \
	$(am__objects_3) $(am__objects_10) $(am__objects_6) \
	$(am__objects_1)
test_Auto_OBJECTS = $(am_test_Auto_OBJECTS)
test_Auto_LDADD = $(LDADD)
test_Auto_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) src/cudd/libobj.a src/cudd/libcudd.a \
	src/cudd/libepd.a src/cudd/libmtr.a src/cudd/libst.a \
	src/cudd/libutil.a src/sat/minisat20/libminisat20.a \
	src/sat/minisat/libminisat.a $(am__append_3)
am_test_ISOP_OBJECTS = src/truthtable/TreeTruthTable.$(OBJEXT) \
	src/truthtable/BitTruthTable.$(OBJEXT) src/cnf/Cover.$(OBJEXT) \
	src/cnf/test_ISOP.$(OBJEXT)
test_ISOP_OBJECTS = $(am_test_ISOP_OBJECTS)
test_ISOP_LDADD = $(LDADD)
test_ISOP_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) src/cudd/libobj.a src/cudd/libcudd.a \
	src/cudd/libepd.a src/cudd/libmtr.a src/cudd/libst.a \
	src/cudd/libutil.a src/sat/minisat20/libminisat20.a \
	src/sat/minisat/libminisat.a $(am__append_3)
am__test_Model_SOURCES_DIST = src/model/test_Model.cpp src/model/Key.h \
	src/model/Model.cpp src/model/Model.h src/util/UtilSystem.cpp \
	src/util/Random.cpp src/util/Util.h src/util/Error.h \
	src/util/BitTricks.h src/util/Random.h \
	src/expressions/Expr.cpp src/expressions/ExprUtil.cpp \
	src/expressions/Expr.h src/expressions/ExprUtil.h \
	src/expressions/ExprNode.h src/expressions/ExprTypes.h \
	src/expressions/ExprBdd.cpp src/expressions/ExprBdd.h \
	src/expressions/ExprVerilog.cpp src/expressions/ExprVerilog.h \
	src/expressions/HashedStructure.h \
	src/expressions/ExprAttachment.h \
	src/expressions/ExprAttachment.cpp src/opt/BddAttachment.h \
	src/opt/BddAttachment.cpp src/opt/BddTrAttachment.h \
	src/opt/BddTrAttachment.cpp src/copt/SATSweep.cpp \
	src/copt/SATSweep.h src/copt/CombAttachment.cpp \
	src/copt/CombAttachment.h src/copt/AIGUtil.cpp \
	src/copt/AIGUtil.h src/copt/AIG.cpp src/copt/AIG.h \
	src/copt/AIGAttachment.cpp src/copt/AIGAttachment.h \
	src/copt/UniqueIntegralType.h src/copt/CutSweep.cpp \
	src/copt/CutSweep.h src/truthtable/TreeTruthTable.h \
	src/truthtable/TreeTruthTable.cpp \
	src/truthtable/TurboTruthTable.h \
	src/truthtable/BitTruthTable.h \
	src/truthtable/BitTruthTable.cpp src/sim/Sim.cpp src/sim/Sim.h \
	src/sim/ThreeValuedSimulation.cpp \
	src/sim/ThreeValuedSimulation.h src/sat/SAT.cpp \
	src/sat/SAT_minisat.cpp src/sat/SAT_minisat.h src/sat/SAT.h \
	src/sat/SAT_zchaff.cpp src/sat/SAT_zchaff.h src/mc/COI.h \
	src/mc/COI.cpp src/mc/BddReach.h src/mc/BddReach.cpp \
	src/mc/ProofAttachment.h src/mc/ProofAttachment.cpp \
	src/mc/RchAttachment.h src/mc/RchAttachment.cpp \
	src/parser/AIGER.cpp src/parser/AIGER.h src/parser/DIMACS.cpp \
	src/parser/DIMACS.h src/parser/aiger19.h src/parser/aiger19.c \
	src/cnf/StringTR.cpp src/properties/PropCtlWrapper.h \
	src/properties/PropCtlScanner.ll \
	src/properties/PropCtlParser.yy src/properties/PropCtlDriver.h \
	src/properties/PropCtlDriver.cpp
am_test_Model_OBJECTS = src/model/test_Model.$(OBJEXT) \
	$(am__objects_4) $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_9) $(am__objects_12) \
	$(am__objects_14) $(am__objects_5) $(am__objects_8) \
	src/mc/COI.$(OBJEXT) src/mc/BddReach.$(OBJEXT) \
	src/mc/ProofAttachment.$(OBJEXT) \
	src/mc/RchAttachment.$(OBJEXT) src/parser/AIGER.$(OBJEXT) \
	src/parser/DIMACS.$(OBJEXT) src/parser/aiger19.$(OBJEXT) \
	src/cnf/StringTR.$(OBJEXT) $(am__objects_16)
test_Model_OBJECTS = $(am_test_Model_OBJECTS)
test_Model_LDADD = $(LDADD)
test_Model_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) src/cudd/libobj.a src/cudd/libcudd.a \
	src/cudd/libepd.a src/cudd/libmtr.a src/cudd/libst.a \
	src/cudd/libutil.a src/sat/minisat20/libminisat20.a \
	src/sat/minisat/libminisat.a $(am__append_3)
am__test_Parser_SOURCES_DIST = src/parser/test_Parser.cpp \
	src/parser/AIGER.cpp src/parser/AIGER.h src/parser/DIMACS.cpp \
	src/parser/DIMACS.h src/parser/aiger19.h src/parser/aiger19.c \
	src/expressions/Expr.cpp src/expressions/ExprUtil.cpp \
	src/model/Model.cpp src/expressions/ExprAttachment.h \
	src/expressions/ExprAttachment.cpp src/copt/AIGUtil.cpp \
	src/copt/AIGUtil.h src/copt/AIG.cpp src/copt/AIG.h \
	src/copt/AIGAttachment.cpp src/copt/AIGAttachment.h \
	src/copt/UniqueIntegralType.h src/sat/SAT.cpp \
	src/sat/SAT_minisat.cpp src/sat/SAT_minisat.h src/sat/SAT.h \
	src/sat/SAT_zchaff.cpp src/sat/SAT_zchaff.h \
	src/expressions/ExprVerilog.cpp src/expressions/ExprVerilog.h \
	src/util/UtilSystem.cpp src/util/Random.cpp
am_test_Parser_OBJECTS = src/parser/test_Parser.$(OBJEXT) \
	$(am__objects_6) src/expressions/Expr.$(OBJEXT) \
	src/expressions/ExprUtil.$(OBJEXT) src/model/Model.$(OBJEXT) \
	$(am__objects_3) $(am__objects_10) $(am__objects_8) \
	src/expressions/ExprVerilog.$(OBJEXT) \
	src/util/UtilSystem.$(OBJEXT) src/util/Random.$(OBJEXT)
test_Parser_OBJECTS = $(am_test_Parser_OBJECTS)
test_Parser_LDADD = $(LDADD)
test_Parser_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) src/cudd/libobj.a src/cudd/libcudd.a \
	src/cudd/libepd.a src/cudd/libmtr.a src/cudd/libst.a \
	src/cudd/libutil.a src/sat/minisat20/libminisat20.a \
	src/sat/minisat/libminisat.a $(am__append_3)
am_test_Prop_OBJECTS = src/properties/test_Prop.$(OBJEXT) \
	$(am__objects_16) $(am__objects_2) $(am__objects_4) \
	$(am__objects_3) $(am__objects_10) $(am__objects_6) \
	$(am__objects_1)
test_Prop_OBJECTS = $(am_test_Prop_OBJECTS)
test_Prop_LDADD = $(LDADD)
test_Prop_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) src/cudd/libobj.a src/cudd/libcudd.a \
	src/cudd/libepd.a src/cudd/libmtr.a src/cudd/libst.a \
	src/cudd/libutil.a src/sat/minisat20/libminisat20.a \
	src/sat/minisat/libminisat.a $(am__append_3)
am__test_SAT_SOURCES_DIST = src/sat/test_SAT.cpp src/sat/SAT.cpp \
	src/sat/SAT_minisat.cpp src/sat/SAT_minisat.h src/sat/SAT.h \
	src/sat/SAT_zchaff.cpp src/sat/SAT_zchaff.h \
	src/expressions/Expr.cpp src/expressions/ExprUtil.cpp \
	src/expressions/Expr.h src/expressions/ExprUtil.h \
	src/expressions/ExprNode.h src/expressions/ExprTypes.h \
	src/expressions/ExprBdd.cpp src/expressions/ExprBdd.h \
	src/expressions/ExprVerilog.cpp src/expressions/ExprVerilog.h \
	src/expressions/HashedStructure.h src/model/Key.h \
	src/model/Model.cpp src/model/Model.h src/util/UtilSystem.cpp \
	src/util/Random.cpp src/util/Util.h src/util/Error.h \
	src/util/BitTricks.h src/util/Random.h
am_test_SAT_OBJECTS = src/sat/test_SAT.$(OBJEXT) $(am__objects_8) \
	$(am__objects_2) $(am__objects_4) $(am__objects_1)
test_SAT_OBJECTS = $(am_test_SAT_OBJECTS)
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) src/cudd/libobj.a src/cudd/libcudd.a \
	src/cudd/libepd.a src/cudd/libmtr.a src/cudd/libst.a \
	src/cudd/libutil.a src/sat/minisat20/libminisat20.a \
	src/sat/minisat/libminisat.a $(am__append_3)
test_SAT_DEPENDENCIES = $(am__DEPENDENCIES_2) src/parser/aiger19.o
am_test_TruthTables_OBJECTS =  \
	src/truthtable/test_TruthTables.$(OBJEXT) \
	src/truthtable/TreeTruthTable.$(OBJEXT) \
	src/truthtable/BitTruthTable.$(OBJEXT)
test_TruthTables_OBJECTS = $(am_test_TruthTables_OBJECTS)
test_TruthTables_LDADD = $(LDADD)
test_TruthTables_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) src/cudd/libobj.a \
	src/cudd/libcudd.a src/cudd/libepd.a src/cudd/libmtr.a \
	src/cudd/libst.a src/cudd/libutil.a \
	src/sat/minisat20/libminisat20.a src/sat/minisat/libminisat.a \
	$(am__append_3)
am_test_Util_OBJECTS = src/util/test_Util.$(OBJEXT) $(am__objects_1)
test_Util_OBJECTS = $(am_test_Util_OBJECTS)
test_Util_LDADD = $(LDADD)
test_Util_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) src/cudd/libobj.a src/cudd/libcudd.a \
	src/cudd/libepd.a src/cudd/libmtr.a src/cudd/libst.a \
	src/cudd/libutil.a src/sat/minisat20/libminisat20.a \
	src/sat/minisat/libminisat.a $(am__append_3)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_@AM_V@)
am__v_LEX_ = $(am__v_LEX_@AM_DEFAULT_V@)
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/build-aux/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_@AM_V@)
am__v_YACC_ = $(am__v_YACC_@AM_DEFAULT_V@)
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
SOURCES = $(iimc_SOURCES) $(test_Auto_SOURCES) $(test_ISOP_SOURCES) \
	$(test_Model_SOURCES) $(test_Parser_SOURCES) \
	$(test_Prop_SOURCES) $(test_SAT_SOURCES) \
	$(test_TruthTables_SOURCES) $(test_Util_SOURCES)
DIST_SOURCES = $(am__iimc_SOURCES_DIST) $(test_Auto_SOURCES) \
	$(test_ISOP_SOURCES) $(am__test_Model_SOURCES_DIST) \
	$(am__test_Parser_SOURCES_DIST) $(test_Prop_SOURCES) \
	$(am__test_SAT_SOURCES_DIST) $(test_TruthTables_SOURCES) \
	$(test_Util_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope check recheck distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = src/cudd src/sat/minisat20 src/sat/minisat \
	src/sat/zchaff
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CPPFLAGS = @AM_CPPFLAGS@ -I$(srcdir)/src/util \
	-I$(srcdir)/src/expressions -I$(srcdir)/src/model \
	-I$(srcdir)/src/sim -I$(srcdir)/src/parser -Isrc/sat \
	-I$(srcdir)/src/sat -I$(srcdir)/src/opt -I$(srcdir)/src/copt \
	-I$(srcdir)/src/sopt -I$(srcdir)/src/truthtable \
	-I$(srcdir)/src/cnf -I$(srcdir)/src/properties \
	-Isrc/properties -I$(srcdir)/src/automata -Isrc/automata \
	-I$(srcdir)/src/mc -I$(srcdir)/src/main $(BOOST_CPPFLAGS) \
	-I$(top_srcdir)/src/cudd -D __STDC_LIMIT_MACROS -D \
	__STDC_FORMAT_MACROS
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = 
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN_PAPER_SIZE = @DOXYGEN_PAPER_SIZE@
DX_CONFIG = @DX_CONFIG@
DX_DOCDIR = @DX_DOCDIR@
DX_DOT = @DX_DOT@
DX_DOXYGEN = @DX_DOXYGEN@
DX_DVIPS = @DX_DVIPS@
DX_EGREP = @DX_EGREP@
DX_ENV = @DX_ENV@
DX_FLAG_chi = @DX_FLAG_chi@
DX_FLAG_chm = @DX_FLAG_chm@
DX_FLAG_doc = @DX_FLAG_doc@
DX_FLAG_dot = @DX_FLAG_dot@
DX_FLAG_html = @DX_FLAG_html@
DX_FLAG_man = @DX_FLAG_man@
DX_FLAG_pdf = @DX_FLAG_pdf@
DX_FLAG_ps = @DX_FLAG_ps@
DX_FLAG_rtf = @DX_FLAG_rtf@
DX_FLAG_xml = @DX_FLAG_xml@
DX_HHC = @DX_HHC@
DX_LATEX = @DX_LATEX@
DX_MAKEINDEX = @DX_MAKEINDEX@
DX_PDFLATEX = @DX_PDFLATEX@
DX_PERL = @DX_PERL@
DX_PROJECT = @DX_PROJECT@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = src/cudd src/sat/minisat20 src/sat/minisat $(am__append_1)
ACLOCAL_AMFLAGS = -I m4
iimc_SOURCES = $(util_Util_sources) $(expressions_Expr_sources) \
	$(expressions_Attachment_sources) $(model_Model_sources) \
	$(sim_Sim_sources) $(parser_Parser_sources) $(sat_SAT_sources) \
	$(opt_BDD_sources) $(copt_Copt_sources) $(sopt_SOPT_sources) \
	$(truthtable_TruthTable_sources) $(cnf_CNF_sources) \
	$(properties_Prop_sources) $(automata_Auto_sources) \
	$(mc_MC_sources) $(main_Main_sources)
check_SCRIPTS = test_prop.sh test_auto.sh test_iimc.sh
EXTRA_DIST = LICENSE LICENSE.zchaff examples/aig19 examples/dimacs \
	examples/ctl src/properties/test_prop.sh.in \
	src/automata/test_auto.sh.in src/main/test_iimc.sh.in
dist_check_DATA = src/properties/tests/egefo0.ctl \
	src/properties/tests/reset.ctl src/properties/tests/until.ctl \
	src/properties/tests/response.ctl \
	src/properties/tests/syntaxError.ctl \
	src/properties/tests/reduction.ctl \
	src/properties/tests/mult.ctl src/automata/tests/gg.auto \
	src/automata/tests/gx.auto src/automata/tests/multAuto.auto \
	src/automata/tests/multBad.auto \
	src/automata/tests/multInit.auto \
	src/automata/tests/syntaxError.auto
CLEANFILES = src/properties/PropCtlParser.hh \
	src/properties/PropCtlParser.cc \
	src/properties/PropCtlScanner.cc src/properties/location.hh \
	src/properties/stack.hh src/properties/position.hh \
	src/automata/AutoParser.hh src/automata/AutoParser.cc \
	src/automata/AutoScanner.cc src/automata/location.hh \
	src/automata/stack.hh src/automata/position.hh \
	$(check_SCRIPTS)
LDADD = $(BOOST_LDFLAGS) $(BOOST_SYSTEM_LIB) \
	$(BOOST_PROGRAM_OPTIONS_LIB) $(BOOST_REGEX_LIB) \
	$(BOOST_THREAD_LIB) src/cudd/libobj.a src/cudd/libcudd.a \
	src/cudd/libepd.a src/cudd/libmtr.a src/cudd/libst.a \
	src/cudd/libutil.a src/sat/minisat20/libminisat20.a \
	src/sat/minisat/libminisat.a $(am__append_3)
do_subst = sed \
  -e 's,[@]EXEEXT[@],$(EXEEXT),g' \
  -e 's,[@]srcdir[@],$(srcdir),g'

util_Util_sources = \
  src/util/UtilSystem.cpp \
  src/util/Random.cpp \
  src/util/Util.h \
  src/util/Error.h \
  src/util/BitTricks.h \
  src/util/Random.h

test_Util_SOURCES = \
  src/util/test_Util.cpp \
  $(util_Util_sources)

expressions_Expr_sources = \
  src/expressions/Expr.cpp \
  src/expressions/ExprUtil.cpp \
  src/expressions/Expr.h \
  src/expressions/ExprUtil.h \
  src/expressions/ExprNode.h \
  src/expressions/ExprTypes.h \
  src/expressions/ExprBdd.cpp \
  src/expressions/ExprBdd.h \
  src/expressions/ExprVerilog.cpp \
  src/expressions/ExprVerilog.h \
  src/expressions/HashedStructure.h

expressions_Attachment_sources = \
  src/expressions/ExprAttachment.h \
  src/expressions/ExprAttachment.cpp

model_Model_sources = \
  src/model/Key.h \
  src/model/Model.cpp \
  src/model/Model.h

test_Model_SOURCES = src/model/test_Model.cpp \
  $(model_Model_sources) \
  $(util_Util_sources) \
  $(expressions_Expr_sources) \
  $(expressions_Attachment_sources) \
  $(opt_BDD_sources) \
  $(copt_Copt_sources) \
  $(truthtable_TruthTable_sources) \
  $(sim_Sim_sources) \
  $(sat_SAT_sources) \
  src/mc/COI.h \
  src/mc/COI.cpp \
  src/mc/BddReach.h \
  src/mc/BddReach.cpp \
  src/mc/ProofAttachment.h \
  src/mc/ProofAttachment.cpp \
  src/mc/RchAttachment.h \
  src/mc/RchAttachment.cpp \
  src/parser/AIGER.cpp \
  src/parser/AIGER.h \
  src/parser/DIMACS.cpp \
  src/parser/DIMACS.h \
  src/parser/aiger19.h \
  src/parser/aiger19.c \
  src/cnf/StringTR.cpp \
  $(properties_Prop_sources)

sim_Sim_sources = \
  src/sim/Sim.cpp \
  src/sim/Sim.h \
  src/sim/ThreeValuedSimulation.cpp \
  src/sim/ThreeValuedSimulation.h

parser_Parser_sources = \
  src/parser/AIGER.cpp \
  src/parser/AIGER.h \
  src/parser/DIMACS.cpp \
  src/parser/DIMACS.h \
  src/parser/aiger19.h \
  src/parser/aiger19.c

test_Parser_SOURCES = \
  src/parser/test_Parser.cpp \
  $(parser_Parser_sources) \
  src/expressions/Expr.cpp \
  src/expressions/ExprUtil.cpp \
  src/model/Model.cpp \
  $(expressions_Attachment_sources) \
  $(copt_AIG_sources) \
  $(sat_SAT_sources) \
  src/expressions/ExprVerilog.cpp \
  src/expressions/ExprVerilog.h \
  src/util/UtilSystem.cpp \
  src/util/Random.cpp

sat_SAT_sources = src/sat/SAT.cpp src/sat/SAT_minisat.cpp \
	src/sat/SAT_minisat.h src/sat/SAT.h $(am__append_2)
test_SAT_LDADD = $(LDADD) src/parser/aiger19.o
test_SAT_SOURCES = \
  src/sat/test_SAT.cpp \
  $(sat_SAT_sources) \
  $(expressions_Expr_sources) \
  $(model_Model_sources) \
  $(util_Util_sources)

opt_BDD_sources = \
  src/opt/BddAttachment.h \
  src/opt/BddAttachment.cpp \
  src/opt/BddTrAttachment.h \
  src/opt/BddTrAttachment.cpp

copt_Copt_sources = \
  src/copt/SATSweep.cpp \
  src/copt/SATSweep.h \
  src/copt/CombAttachment.cpp \
  src/copt/CombAttachment.h \
  $(copt_AIG_sources) \
  $(copt_CutSweep_sources)

copt_AIG_sources = \
  src/copt/AIGUtil.cpp \
  src/copt/AIGUtil.h \
  src/copt/AIG.cpp \
  src/copt/AIG.h \
  src/copt/AIGAttachment.cpp \
  src/copt/AIGAttachment.h \
  src/copt/UniqueIntegralType.h

copt_CutSweep_sources = \
  src/copt/CutSweep.cpp \
  src/copt/CutSweep.h

sopt_SOPT_sources = \
  src/sopt/SeqAttachment.h \
  src/sopt/SeqAttachment.cpp \
  src/sopt/SequentialEquivalence.h \
  src/sopt/SequentialEquivalence.cpp \
  src/sopt/StuckAt.h \
  src/sopt/StuckAt.cpp \
  src/sopt/Simplifier.h \
  src/sopt/Simplifier.cpp \
  src/sopt/PhaseAbstraction.h \
  src/sopt/PhaseAbstraction.cpp \
  src/sopt/AbsInt.h \
  src/sopt/AbsInt.cpp \
  src/sopt/Slice.h \
  src/sopt/Slice.cpp \
  src/sopt/Decode.h \
  src/sopt/Decode.cpp

truthtable_TruthTable_sources = \
  src/truthtable/TreeTruthTable.h \
  src/truthtable/TreeTruthTable.cpp \
  src/truthtable/TurboTruthTable.h \
  src/truthtable/BitTruthTable.h \
  src/truthtable/BitTruthTable.cpp

test_TruthTables_SOURCES = \
  src/truthtable/test_TruthTables.cpp \
  src/truthtable/TreeTruthTable.h \
  src/truthtable/TreeTruthTable.cpp \
  src/truthtable/BitTruthTable.h \
  src/truthtable/BitTruthTable.cpp

cnf_CNF_sources = \
  src/cnf/ISOP.h \
  src/cnf/Cover.h \
  src/cnf/TechMapCNF.h \
  src/cnf/TechMapCNF.cpp \
  src/cnf/CNFTestAction.h \
  src/cnf/CNFDummyAction.h \
  src/cnf/CNFAttachment.h \
  src/cnf/CNFAttachment.cpp \
  src/cnf/DIMACSAction.h \
  src/cnf/DIMACSAction.cpp \
  src/cnf/NiceDAG.h \
  src/cnf/NiceDAG.cpp \
  src/cnf/Cut.h \
  src/cnf/CutAlgorithm.h \
  src/cnf/Cover.cpp \
  src/cnf/SimplifyCNF.h \
  src/cnf/SimplifyCNF.cpp \
  src/cnf/StringTR.h \
  src/cnf/StringTR.cpp

test_ISOP_SOURCES = \
  src/truthtable/TreeTruthTable.h \
  src/truthtable/TreeTruthTable.cpp \
  src/truthtable/BitTruthTable.h \
  src/truthtable/BitTruthTable.cpp \
  src/cnf/ISOP.h \
  src/cnf/Cover.h \
  src/cnf/Cover.cpp \
  src/cnf/test_ISOP.cpp

properties_Prop_sources = \
  src/properties/PropCtlWrapper.h \
  src/properties/PropCtlScanner.ll \
  src/properties/PropCtlParser.yy \
  src/properties/PropCtlDriver.h \
  src/properties/PropCtlDriver.cpp

AM_LFLAGS = -o$(LEX_OUTPUT_ROOT).c -o$(LEX_OUTPUT_ROOT).c
test_Prop_SOURCES = \
  src/properties/test_Prop.cpp \
  $(properties_Prop_sources) \
  $(expressions_Expr_sources) \
  $(model_Model_sources) \
  $(expressions_Attachment_sources) \
  $(copt_AIG_sources) \
  $(parser_Parser_sources) \
  $(util_Util_sources)

automata_Auto_sources = \
  src/automata/Automaton.h \
  src/automata/AutoWrapper.h \
  src/automata/AutoScanner.ll \
  src/automata/AutoParser.yy \
  src/automata/AutoDriver.h \
  src/automata/AutoDriver.cpp

test_Auto_SOURCES = \
  src/automata/test_Auto.cpp \
  $(automata_Auto_sources) \
  $(expressions_Expr_sources) \
  $(model_Model_sources) \
  $(expressions_Attachment_sources) \
  $(copt_AIG_sources) \
  $(parser_Parser_sources) \
  $(util_Util_sources)

mc_MC_sources = \
  src/mc/MC.h \
  src/mc/BMC.cpp \
  src/mc/BMC.h \
  src/mc/COI.h \
  src/mc/COI.cpp \
  src/mc/IC3.h \
  src/mc/IC3.cpp \
  src/mc/FSIS.h \
  src/mc/BddReach.h \
  src/mc/BddReach.cpp \
  src/mc/TacticMisc.h \
  src/mc/TacticMisc.cpp \
  src/mc/ProofAttachment.h \
  src/mc/ProofAttachment.cpp \
  src/mc/RchAttachment.h \
  src/mc/RchAttachment.cpp \
  src/mc/Fair.h \
  src/mc/Fair.cpp \
  src/mc/IICTL.h \
  src/mc/IICTL.cpp \
  src/mc/FCBMC.h \
  src/mc/FCBMC.cpp \
  src/mc/IIC.h \
  src/mc/IIC.cpp \
  src/mc/BddGSH.h \
  src/mc/BddGSH.cpp \
  src/mc/Persist.h \
  src/mc/Persist.cpp \
  src/mc/KLive.h \
  src/mc/KLive.cpp

main_Main_sources = \
  src/main/options.cpp \
  src/main/main.cpp \
  src/main/Dispatch.cpp \
  src/main/Engine.cpp \
  src/main/options.h \
  src/main/Dispatch.h \
  src/main/Engine.h \
  src/main/Verbosity.h

@DX_COND_doc_TRUE@@DX_COND_html_TRUE@DX_CLEAN_HTML = @DX_DOCDIR@/html
@DX_COND_chm_TRUE@@DX_COND_doc_TRUE@DX_CLEAN_CHM = @DX_DOCDIR@/chm
@DX_COND_chi_TRUE@@DX_COND_chm_TRUE@@DX_COND_doc_TRUE@DX_CLEAN_CHI = @DX_DOCDIR@/@PACKAGE@.chi
@DX_COND_doc_TRUE@@DX_COND_man_TRUE@DX_CLEAN_MAN = @DX_DOCDIR@/man
@DX_COND_doc_TRUE@@DX_COND_rtf_TRUE@DX_CLEAN_RTF = @DX_DOCDIR@/rtf
@DX_COND_doc_TRUE@@DX_COND_xml_TRUE@DX_CLEAN_XML = @DX_DOCDIR@/xml
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@DX_CLEAN_PS = @DX_DOCDIR@/@PACKAGE@.ps
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@DX_PS_GOAL = doxygen-ps
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@DX_CLEAN_PDF = @DX_DOCDIR@/@PACKAGE@.pdf
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@DX_PDF_GOAL = doxygen-pdf
@DX_COND_doc_TRUE@@DX_COND_latex_TRUE@DX_CLEAN_LATEX = @DX_DOCDIR@/latex
@DX_COND_doc_TRUE@DX_CLEANFILES = \
@DX_COND_doc_TRUE@    @DX_DOCDIR@/@PACKAGE@.tag \
@DX_COND_doc_TRUE@    -r \
@DX_COND_doc_TRUE@    $(DX_CLEAN_HTML) \
@DX_COND_doc_TRUE@    $(DX_CLEAN_CHM) \
@DX_COND_doc_TRUE@    $(DX_CLEAN_CHI) \
@DX_COND_doc_TRUE@    $(DX_CLEAN_MAN) \
@DX_COND_doc_TRUE@    $(DX_CLEAN_RTF) \
@DX_COND_doc_TRUE@    $(DX_CLEAN_XML) \
@DX_COND_doc_TRUE@    $(DX_CLEAN_PS) \
@DX_COND_doc_TRUE@    $(DX_CLEAN_PDF) \
@DX_COND_doc_TRUE@    $(DX_CLEAN_LATEX)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .ll .log .o .obj .test .test$(EXEEXT) .trs .yy
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/util/util.make $(top_srcdir)/src/expressions/expressions.make $(top_srcdir)/src/model/model.make $(top_srcdir)/src/sim/sim.make $(top_srcdir)/src/parser/parser.make $(top_srcdir)/src/sat/sat.make $(top_srcdir)/src/opt/opt.make $(top_srcdir)/src/copt/copt.make $(top_srcdir)/src/sopt/sopt.make $(top_srcdir)/src/truthtable/truthtable.make $(top_srcdir)/src/cnf/cnf.make $(top_srcdir)/src/properties/properties.make $(top_srcdir)/src/automata/automata.make $(top_srcdir)/src/mc/mc.make $(top_srcdir)/src/main/main.make $(top_srcdir)/aminclude.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/src/util/util.make $(top_srcdir)/src/expressions/expressions.make $(top_srcdir)/src/model/model.make $(top_srcdir)/src/sim/sim.make $(top_srcdir)/src/parser/parser.make $(top_srcdir)/src/sat/sat.make $(top_srcdir)/src/opt/opt.make $(top_srcdir)/src/copt/copt.make $(top_srcdir)/src/sopt/sopt.make $(top_srcdir)/src/truthtable/truthtable.make $(top_srcdir)/src/cnf/cnf.make $(top_srcdir)/src/properties/properties.make $(top_srcdir)/src/automata/automata.make $(top_srcdir)/src/mc/mc.make $(top_srcdir)/src/main/main.make $(top_srcdir)/aminclude.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
Doxyfile: $(top_builddir)/config.status $(srcdir)/Doxyfile.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
src/util/$(am__dirstamp):
	@$(MKDIR_P) src/util
	@: > src/util/$(am__dirstamp)
src/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/util/$(DEPDIR)
	@: > src/util/$(DEPDIR)/$(am__dirstamp)
src/util/UtilSystem.$(OBJEXT): src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/util/Random.$(OBJEXT): src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)
src/expressions/$(am__dirstamp):
	@$(MKDIR_P) src/expressions
	@: > src/expressions/$(am__dirstamp)
src/expressions/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/expressions/$(DEPDIR)
	@: > src/expressions/$(DEPDIR)/$(am__dirstamp)
src/expressions/Expr.$(OBJEXT): src/expressions/$(am__dirstamp) \
	src/expressions/$(DEPDIR)/$(am__dirstamp)
src/expressions/ExprUtil.$(OBJEXT): src/expressions/$(am__dirstamp) \
	src/expressions/$(DEPDIR)/$(am__dirstamp)
src/expressions/ExprBdd.$(OBJEXT): src/expressions/$(am__dirstamp) \
	src/expressions/$(DEPDIR)/$(am__dirstamp)
src/expressions/ExprVerilog.$(OBJEXT):  \
	src/expressions/$(am__dirstamp) \
	src/expressions/$(DEPDIR)/$(am__dirstamp)
src/expressions/ExprAttachment.$(OBJEXT):  \
	src/expressions/$(am__dirstamp) \
	src/expressions/$(DEPDIR)/$(am__dirstamp)
src/model/$(am__dirstamp):
	@$(MKDIR_P) src/model
	@: > src/model/$(am__dirstamp)
src/model/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/model/$(DEPDIR)
	@: > src/model/$(DEPDIR)/$(am__dirstamp)
src/model/Model.$(OBJEXT): src/model/$(am__dirstamp) \
	src/model/$(DEPDIR)/$(am__dirstamp)
src/sim/$(am__dirstamp):
	@$(MKDIR_P) src/sim
	@: > src/sim/$(am__dirstamp)
src/sim/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/sim/$(DEPDIR)
	@: > src/sim/$(DEPDIR)/$(am__dirstamp)
src/sim/Sim.$(OBJEXT): src/sim/$(am__dirstamp) \
	src/sim/$(DEPDIR)/$(am__dirstamp)
src/sim/ThreeValuedSimulation.$(OBJEXT): src/sim/$(am__dirstamp) \
	src/sim/$(DEPDIR)/$(am__dirstamp)
src/parser/$(am__dirstamp):
	@$(MKDIR_P) src/parser
	@: > src/parser/$(am__dirstamp)
src/parser/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/parser/$(DEPDIR)
	@: > src/parser/$(DEPDIR)/$(am__dirstamp)
src/parser/AIGER.$(OBJEXT): src/parser/$(am__dirstamp) \
	src/parser/$(DEPDIR)/$(am__dirstamp)
src/parser/DIMACS.$(OBJEXT): src/parser/$(am__dirstamp) \
	src/parser/$(DEPDIR)/$(am__dirstamp)
src/parser/aiger19.$(OBJEXT): src/parser/$(am__dirstamp) \
	src/parser/$(DEPDIR)/$(am__dirstamp)
src/sat/$(am__dirstamp):
	@$(MKDIR_P) src/sat
	@: > src/sat/$(am__dirstamp)
src/sat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/sat/$(DEPDIR)
	@: > src/sat/$(DEPDIR)/$(am__dirstamp)
src/sat/SAT.$(OBJEXT): src/sat/$(am__dirstamp) \
	src/sat/$(DEPDIR)/$(am__dirstamp)
src/sat/SAT_minisat.$(OBJEXT): src/sat/$(am__dirstamp) \
	src/sat/$(DEPDIR)/$(am__dirstamp)
src/sat/SAT_zchaff.$(OBJEXT): src/sat/$(am__dirstamp) \
	src/sat/$(DEPDIR)/$(am__dirstamp)
src/opt/$(am__dirstamp):
	@$(MKDIR_P) src/opt
	@: > src/opt/$(am__dirstamp)
src/opt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/opt/$(DEPDIR)
	@: > src/opt/$(DEPDIR)/$(am__dirstamp)
src/opt/BddAttachment.$(OBJEXT): src/opt/$(am__dirstamp) \
	src/opt/$(DEPDIR)/$(am__dirstamp)
src/opt/BddTrAttachment.$(OBJEXT): src/opt/$(am__dirstamp) \
	src/opt/$(DEPDIR)/$(am__dirstamp)
src/copt/$(am__dirstamp):
	@$(MKDIR_P) src/copt
	@: > src/copt/$(am__dirstamp)
src/copt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/copt/$(DEPDIR)
	@: > src/copt/$(DEPDIR)/$(am__dirstamp)
src/copt/SATSweep.$(OBJEXT): src/copt/$(am__dirstamp) \
	src/copt/$(DEPDIR)/$(am__dirstamp)
src/copt/CombAttachment.$(OBJEXT): src/copt/$(am__dirstamp) \
	src/copt/$(DEPDIR)/$(am__dirstamp)
src/copt/AIGUtil.$(OBJEXT): src/copt/$(am__dirstamp) \
	src/copt/$(DEPDIR)/$(am__dirstamp)
src/copt/AIG.$(OBJEXT): src/copt/$(am__dirstamp) \
	src/copt/$(DEPDIR)/$(am__dirstamp)
src/copt/AIGAttachment.$(OBJEXT): src/copt/$(am__dirstamp) \
	src/copt/$(DEPDIR)/$(am__dirstamp)
src/copt/CutSweep.$(OBJEXT): src/copt/$(am__dirstamp) \
	src/copt/$(DEPDIR)/$(am__dirstamp)
src/sopt/$(am__dirstamp):
	@$(MKDIR_P) src/sopt
	@: > src/sopt/$(am__dirstamp)
src/sopt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/sopt/$(DEPDIR)
	@: > src/sopt/$(DEPDIR)/$(am__dirstamp)
src/sopt/SeqAttachment.$(OBJEXT): src/sopt/$(am__dirstamp) \
	src/sopt/$(DEPDIR)/$(am__dirstamp)
src/sopt/SequentialEquivalence.$(OBJEXT): src/sopt/$(am__dirstamp) \
	src/sopt/$(DEPDIR)/$(am__dirstamp)
src/sopt/StuckAt.$(OBJEXT): src/sopt/$(am__dirstamp) \
	src/sopt/$(DEPDIR)/$(am__dirstamp)
src/sopt/Simplifier.$(OBJEXT): src/sopt/$(am__dirstamp) \
	src/sopt/$(DEPDIR)/$(am__dirstamp)
src/sopt/PhaseAbstraction.$(OBJEXT): src/sopt/$(am__dirstamp) \
	src/sopt/$(DEPDIR)/$(am__dirstamp)
src/sopt/AbsInt.$(OBJEXT): src/sopt/$(am__dirstamp) \
	src/sopt/$(DEPDIR)/$(am__dirstamp)
src/sopt/Slice.$(OBJEXT): src/sopt/$(am__dirstamp) \
	src/sopt/$(DEPDIR)/$(am__dirstamp)
src/sopt/Decode.$(OBJEXT): src/sopt/$(am__dirstamp) \
	src/sopt/$(DEPDIR)/$(am__dirstamp)
src/truthtable/$(am__dirstamp):
	@$(MKDIR_P) src/truthtable
	@: > src/truthtable/$(am__dirstamp)
src/truthtable/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/truthtable/$(DEPDIR)
	@: > src/truthtable/$(DEPDIR)/$(am__dirstamp)
src/truthtable/TreeTruthTable.$(OBJEXT):  \
	src/truthtable/$(am__dirstamp) \
	src/truthtable/$(DEPDIR)/$(am__dirstamp)
src/truthtable/BitTruthTable.$(OBJEXT):  \
	src/truthtable/$(am__dirstamp) \
	src/truthtable/$(DEPDIR)/$(am__dirstamp)
src/cnf/$(am__dirstamp):
	@$(MKDIR_P) src/cnf
	@: > src/cnf/$(am__dirstamp)
src/cnf/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/cnf/$(DEPDIR)
	@: > src/cnf/$(DEPDIR)/$(am__dirstamp)
src/cnf/TechMapCNF.$(OBJEXT): src/cnf/$(am__dirstamp) \
	src/cnf/$(DEPDIR)/$(am__dirstamp)
src/cnf/CNFAttachment.$(OBJEXT): src/cnf/$(am__dirstamp) \
	src/cnf/$(DEPDIR)/$(am__dirstamp)
src/cnf/DIMACSAction.$(OBJEXT): src/cnf/$(am__dirstamp) \
	src/cnf/$(DEPDIR)/$(am__dirstamp)
src/cnf/NiceDAG.$(OBJEXT): src/cnf/$(am__dirstamp) \
	src/cnf/$(DEPDIR)/$(am__dirstamp)
src/cnf/Cover.$(OBJEXT): src/cnf/$(am__dirstamp) \
	src/cnf/$(DEPDIR)/$(am__dirstamp)
src/cnf/SimplifyCNF.$(OBJEXT): src/cnf/$(am__dirstamp) \
	src/cnf/$(DEPDIR)/$(am__dirstamp)
src/cnf/StringTR.$(OBJEXT): src/cnf/$(am__dirstamp) \
	src/cnf/$(DEPDIR)/$(am__dirstamp)
src/properties/$(am__dirstamp):
	@$(MKDIR_P) src/properties
	@: > src/properties/$(am__dirstamp)
src/properties/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/properties/$(DEPDIR)
	@: > src/properties/$(DEPDIR)/$(am__dirstamp)
src/properties/PropCtlScanner.$(OBJEXT):  \
	src/properties/$(am__dirstamp) \
	src/properties/$(DEPDIR)/$(am__dirstamp)
src/properties/PropCtlParser.$(OBJEXT):  \
	src/properties/$(am__dirstamp) \
	src/properties/$(DEPDIR)/$(am__dirstamp)
src/properties/PropCtlDriver.$(OBJEXT):  \
	src/properties/$(am__dirstamp) \
	src/properties/$(DEPDIR)/$(am__dirstamp)
src/automata/$(am__dirstamp):
	@$(MKDIR_P) src/automata
	@: > src/automata/$(am__dirstamp)
src/automata/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/automata/$(DEPDIR)
	@: > src/automata/$(DEPDIR)/$(am__dirstamp)
src/automata/AutoScanner.$(OBJEXT): src/automata/$(am__dirstamp) \
	src/automata/$(DEPDIR)/$(am__dirstamp)
src/automata/AutoParser.$(OBJEXT): src/automata/$(am__dirstamp) \
	src/automata/$(DEPDIR)/$(am__dirstamp)
src/automata/AutoDriver.$(OBJEXT): src/automata/$(am__dirstamp) \
	src/automata/$(DEPDIR)/$(am__dirstamp)
src/mc/$(am__dirstamp):
	@$(MKDIR_P) src/mc
	@: > src/mc/$(am__dirstamp)
src/mc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/mc/$(DEPDIR)
	@: > src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/BMC.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/COI.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/IC3.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/BddReach.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/TacticMisc.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/ProofAttachment.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/RchAttachment.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/Fair.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/IICTL.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/FCBMC.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/IIC.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/BddGSH.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/Persist.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/mc/KLive.$(OBJEXT): src/mc/$(am__dirstamp) \
	src/mc/$(DEPDIR)/$(am__dirstamp)
src/main/$(am__dirstamp):
	@$(MKDIR_P) src/main
	@: > src/main/$(am__dirstamp)
src/main/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/main/$(DEPDIR)
	@: > src/main/$(DEPDIR)/$(am__dirstamp)
src/main/options.$(OBJEXT): src/main/$(am__dirstamp) \
	src/main/$(DEPDIR)/$(am__dirstamp)
src/main/main.$(OBJEXT): src/main/$(am__dirstamp) \
	src/main/$(DEPDIR)/$(am__dirstamp)
src/main/Dispatch.$(OBJEXT): src/main/$(am__dirstamp) \
	src/main/$(DEPDIR)/$(am__dirstamp)
src/main/Engine.$(OBJEXT): src/main/$(am__dirstamp) \
	src/main/$(DEPDIR)/$(am__dirstamp)

iimc$(EXEEXT): $(iimc_OBJECTS) $(iimc_DEPENDENCIES) $(EXTRA_iimc_DEPENDENCIES) 
	@rm -f iimc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(iimc_OBJECTS) $(iimc_LDADD) $(LIBS)
src/automata/test_Auto.$(OBJEXT): src/automata/$(am__dirstamp) \
	src/automata/$(DEPDIR)/$(am__dirstamp)

test_Auto$(EXEEXT): $(test_Auto_OBJECTS) $(test_Auto_DEPENDENCIES) $(EXTRA_test_Auto_DEPENDENCIES) 
	@rm -f test_Auto$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Auto_OBJECTS) $(test_Auto_LDADD) $(LIBS)
src/cnf/test_ISOP.$(OBJEXT): src/cnf/$(am__dirstamp) \
	src/cnf/$(DEPDIR)/$(am__dirstamp)

test_ISOP$(EXEEXT): $(test_ISOP_OBJECTS) $(test_ISOP_DEPENDENCIES) $(EXTRA_test_ISOP_DEPENDENCIES) 
	@rm -f test_ISOP$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ISOP_OBJECTS) $(test_ISOP_LDADD) $(LIBS)
src/model/test_Model.$(OBJEXT): src/model/$(am__dirstamp) \
	src/model/$(DEPDIR)/$(am__dirstamp)

test_Model$(EXEEXT): $(test_Model_OBJECTS) $(test_Model_DEPENDENCIES) $(EXTRA_test_Model_DEPENDENCIES) 
	@rm -f test_Model$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Model_OBJECTS) $(test_Model_LDADD) $(LIBS)
src/parser/test_Parser.$(OBJEXT): src/parser/$(am__dirstamp) \
	src/parser/$(DEPDIR)/$(am__dirstamp)

test_Parser$(EXEEXT): $(test_Parser_OBJECTS) $(test_Parser_DEPENDENCIES) $(EXTRA_test_Parser_DEPENDENCIES) 
	@rm -f test_Parser$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Parser_OBJECTS) $(test_Parser_LDADD) $(LIBS)
src/properties/test_Prop.$(OBJEXT): src/properties/$(am__dirstamp) \
	src/properties/$(DEPDIR)/$(am__dirstamp)

test_Prop$(EXEEXT): $(test_Prop_OBJECTS) $(test_Prop_DEPENDENCIES) $(EXTRA_test_Prop_DEPENDENCIES) 
	@rm -f test_Prop$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Prop_OBJECTS) $(test_Prop_LDADD) $(LIBS)
src/sat/test_SAT.$(OBJEXT): src/sat/$(am__dirstamp) \
	src/sat/$(DEPDIR)/$(am__dirstamp)

test_SAT$(EXEEXT): $(test_SAT_OBJECTS) $(test_SAT_DEPENDENCIES) $(EXTRA_test_SAT_DEPENDENCIES) 
	@rm -f test_SAT$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_SAT_OBJECTS) $(test_SAT_LDADD) $(LIBS)
src/truthtable/test_TruthTables.$(OBJEXT):  \
	src/truthtable/$(am__dirstamp) \
	src/truthtable/$(DEPDIR)/$(am__dirstamp)

test_TruthTables$(EXEEXT): $(test_TruthTables_OBJECTS) $(test_TruthTables_DEPENDENCIES) $(EXTRA_test_TruthTables_DEPENDENCIES) 
	@rm -f test_TruthTables$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_TruthTables_OBJECTS) $(test_TruthTables_LDADD) $(LIBS)
src/util/test_Util.$(OBJEXT): src/util/$(am__dirstamp) \
	src/util/$(DEPDIR)/$(am__dirstamp)

test_Util$(EXEEXT): $(test_Util_OBJECTS) $(test_Util_DEPENDENCIES) $(EXTRA_test_Util_DEPENDENCIES) 
	@rm -f test_Util$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Util_OBJECTS) $(test_Util_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/automata/*.$(OBJEXT)
	-rm -f src/cnf/*.$(OBJEXT)
	-rm -f src/copt/*.$(OBJEXT)
	-rm -f src/expressions/*.$(OBJEXT)
	-rm -f src/main/*.$(OBJEXT)
	-rm -f src/mc/*.$(OBJEXT)
	-rm -f src/model/*.$(OBJEXT)
	-rm -f src/opt/*.$(OBJEXT)
	-rm -f src/parser/*.$(OBJEXT)
	-rm -f src/properties/*.$(OBJEXT)
	-rm -f src/sat/*.$(OBJEXT)
	-rm -f src/sim/*.$(OBJEXT)
	-rm -f src/sopt/*.$(OBJEXT)
	-rm -f src/truthtable/*.$(OBJEXT)
	-rm -f src/util/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@src/automata/$(DEPDIR)/AutoDriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/automata/$(DEPDIR)/AutoParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/automata/$(DEPDIR)/AutoScanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/automata/$(DEPDIR)/test_Auto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/cnf/$(DEPDIR)/CNFAttachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/cnf/$(DEPDIR)/Cover.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/cnf/$(DEPDIR)/DIMACSAction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/cnf/$(DEPDIR)/NiceDAG.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/cnf/$(DEPDIR)/SimplifyCNF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/cnf/$(DEPDIR)/StringTR.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/cnf/$(DEPDIR)/TechMapCNF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/cnf/$(DEPDIR)/test_ISOP.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/copt/$(DEPDIR)/AIG.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/copt/$(DEPDIR)/AIGAttachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/copt/$(DEPDIR)/AIGUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/copt/$(DEPDIR)/CombAttachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/copt/$(DEPDIR)/CutSweep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/copt/$(DEPDIR)/SATSweep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/expressions/$(DEPDIR)/Expr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/expressions/$(DEPDIR)/ExprAttachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/expressions/$(DEPDIR)/ExprBdd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/expressions/$(DEPDIR)/ExprUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/expressions/$(DEPDIR)/ExprVerilog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/main/$(DEPDIR)/Dispatch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/main/$(DEPDIR)/Engine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/main/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/main/$(DEPDIR)/options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/BMC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/BddGSH.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/BddReach.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/COI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/FCBMC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/Fair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/IC3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/IIC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/IICTL.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/KLive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/Persist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/ProofAttachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/RchAttachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/mc/$(DEPDIR)/TacticMisc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/model/$(DEPDIR)/Model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/model/$(DEPDIR)/test_Model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/opt/$(DEPDIR)/BddAttachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/opt/$(DEPDIR)/BddTrAttachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/parser/$(DEPDIR)/AIGER.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/parser/$(DEPDIR)/DIMACS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/parser/$(DEPDIR)/aiger19.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/parser/$(DEPDIR)/test_Parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/properties/$(DEPDIR)/PropCtlDriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/properties/$(DEPDIR)/PropCtlParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/properties/$(DEPDIR)/PropCtlScanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/properties/$(DEPDIR)/test_Prop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sat/$(DEPDIR)/SAT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sat/$(DEPDIR)/SAT_minisat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sat/$(DEPDIR)/SAT_zchaff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sat/$(DEPDIR)/test_SAT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sim/$(DEPDIR)/Sim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sim/$(DEPDIR)/ThreeValuedSimulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sopt/$(DEPDIR)/AbsInt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sopt/$(DEPDIR)/Decode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sopt/$(DEPDIR)/PhaseAbstraction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sopt/$(DEPDIR)/SeqAttachment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sopt/$(DEPDIR)/SequentialEquivalence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sopt/$(DEPDIR)/Simplifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sopt/$(DEPDIR)/Slice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/sopt/$(DEPDIR)/StuckAt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/truthtable/$(DEPDIR)/BitTruthTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/truthtable/$(DEPDIR)/TreeTruthTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/truthtable/$(DEPDIR)/test_TruthTables.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/util/$(DEPDIR)/Random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/util/$(DEPDIR)/UtilSystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/util/$(DEPDIR)/test_Util.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.ll.cc:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.yy.cc:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_SCRIPTS) $(dist_check_DATA)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_Util.log: test_Util$(EXEEXT)
	@p='test_Util$(EXEEXT)'; \
	b='test_Util'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Model.log: test_Model$(EXEEXT)
	@p='test_Model$(EXEEXT)'; \
	b='test_Model'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Parser.log: test_Parser$(EXEEXT)
	@p='test_Parser$(EXEEXT)'; \
	b='test_Parser'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_SAT.log: test_SAT$(EXEEXT)
	@p='test_SAT$(EXEEXT)'; \
	b='test_SAT'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_TruthTables.log: test_TruthTables$(EXEEXT)
	@p='test_TruthTables$(EXEEXT)'; \
	b='test_TruthTables'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ISOP.log: test_ISOP$(EXEEXT)
	@p='test_ISOP$(EXEEXT)'; \
	b='test_ISOP'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_prop.sh.log: test_prop.sh
	@p='test_prop.sh'; \
	b='test_prop.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auto.sh.log: test_auto.sh
	@p='test_auto.sh'; \
	b='test_auto.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_iimc.sh.log: test_iimc.sh
	@p='test_iimc.sh'; \
	b='test_iimc.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS) \
	  $(dist_check_DATA)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(PROGRAMS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/automata/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/automata/$(am__dirstamp)
	-rm -f src/cnf/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/cnf/$(am__dirstamp)
	-rm -f src/copt/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/copt/$(am__dirstamp)
	-rm -f src/expressions/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/expressions/$(am__dirstamp)
	-rm -f src/main/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/main/$(am__dirstamp)
	-rm -f src/mc/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/mc/$(am__dirstamp)
	-rm -f src/model/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/model/$(am__dirstamp)
	-rm -f src/opt/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/opt/$(am__dirstamp)
	-rm -f src/parser/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/parser/$(am__dirstamp)
	-rm -f src/properties/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/properties/$(am__dirstamp)
	-rm -f src/sat/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/sat/$(am__dirstamp)
	-rm -f src/sim/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/sim/$(am__dirstamp)
	-rm -f src/sopt/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/sopt/$(am__dirstamp)
	-rm -f src/truthtable/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/truthtable/$(am__dirstamp)
	-rm -f src/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/util/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f src/automata/AutoParser.cc
	-rm -f src/automata/AutoScanner.cc
	-rm -f src/properties/PropCtlParser.cc
	-rm -f src/properties/PropCtlScanner.cc
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/automata/$(DEPDIR) src/cnf/$(DEPDIR) src/copt/$(DEPDIR) src/expressions/$(DEPDIR) src/main/$(DEPDIR) src/mc/$(DEPDIR) src/model/$(DEPDIR) src/opt/$(DEPDIR) src/parser/$(DEPDIR) src/properties/$(DEPDIR) src/sat/$(DEPDIR) src/sim/$(DEPDIR) src/sopt/$(DEPDIR) src/truthtable/$(DEPDIR) src/util/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/automata/$(DEPDIR) src/cnf/$(DEPDIR) src/copt/$(DEPDIR) src/expressions/$(DEPDIR) src/main/$(DEPDIR) src/mc/$(DEPDIR) src/model/$(DEPDIR) src/opt/$(DEPDIR) src/parser/$(DEPDIR) src/properties/$(DEPDIR) src/sat/$(DEPDIR) src/sim/$(DEPDIR) src/sopt/$(DEPDIR) src/truthtable/$(DEPDIR) src/util/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) all check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-TESTS check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-cscope clean-generic cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS


dist-hook:
	$(foreach i,$(DIST_SOURCES),sed -i -e '/^LICENSE/r $(top_srcdir)/LICENSE' -e '/^LICENSE/d' $(distdir)/$(i);)
	rm -rf `find $(distdir)/examples -name .svn`

src/properties/PropCtlParser.$(OBJEXT): src/properties/PropCtlParser.cc src/properties/PropCtlParser.hh

src/properties/PropCtlParser.hh src/properties/PropCtlParser.cc: src/properties/PropCtlParser.yy
	$(YACC) -o src/properties/PropCtlParser.cc $(top_srcdir)/src/properties/PropCtlParser.yy

src/properties/PropCtlScanner.cc: $(top_srcdir)/src/properties/PropCtlScanner.ll src/properties/PropCtlParser.hh

test_prop.sh: src/properties/test_prop.sh.in
	$(do_subst) $< > $@
	chmod +x $@

src/automata/AutoParser.$(OBJEXT): src/automata/AutoParser.cc src/automata/AutoParser.hh

src/automata/AutoParser.hh src/automata/AutoParser.cc: src/automata/AutoParser.yy
	$(YACC) --name-prefix=autoparser -o src/automata/AutoParser.cc $(top_srcdir)/src/automata/AutoParser.yy

src/automata/AutoScanner.cc: $(top_srcdir)/src/automata/AutoScanner.ll src/automata/AutoParser.hh

test_auto.sh: src/automata/test_auto.sh.in
	$(do_subst) $< > $@
	chmod +x $@

test_iimc.sh: src/main/test_iimc.sh.in Makefile
	$(do_subst) $< > $@
	chmod +x $@

@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@doxygen-ps: @DX_DOCDIR@/@PACKAGE@.ps

@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@@DX_DOCDIR@/@PACKAGE@.ps: @DX_DOCDIR@/@PACKAGE@.tag
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	cd @DX_DOCDIR@/latex; \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	rm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	$(DX_LATEX) refman.tex; \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	$(MAKEINDEX_PATH) refman.idx; \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	$(DX_LATEX) refman.tex; \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	countdown=5; \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	while $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	                  refman.log > /dev/null 2>&1 \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	   && test $$countdown -gt 0; do \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	    $(DX_LATEX) refman.tex; \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	    countdown=`expr $$countdown - 1`; \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	done; \
@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@	$(DX_DVIPS) -o ../@PACKAGE@.ps refman.dvi

@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@doxygen-pdf: @DX_DOCDIR@/@PACKAGE@.pdf

@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@@DX_DOCDIR@/@PACKAGE@.pdf: @DX_DOCDIR@/@PACKAGE@.tag
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	cd @DX_DOCDIR@/latex; \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	rm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	$(DX_PDFLATEX) refman.tex; \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	$(DX_MAKEINDEX) refman.idx; \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	$(DX_PDFLATEX) refman.tex; \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	countdown=5; \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	while $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	                  refman.log > /dev/null 2>&1 \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	  && test $$countdown -gt 0; do \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	   $(DX_PDFLATEX) refman.tex; \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	   countdown=`expr $$countdown - 1`; \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	done; \
@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@	mv refman.pdf ../@PACKAGE@.pdf

@DX_COND_doc_TRUE@.PHONY: doxygen-run doxygen-doc $(DX_PS_GOAL) $(DX_PDF_GOAL)

@DX_COND_doc_TRUE@.INTERMEDIATE: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)

@DX_COND_doc_TRUE@doxygen-run: @DX_DOCDIR@/@PACKAGE@.tag

@DX_COND_doc_TRUE@doxygen-doc: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)

@DX_COND_doc_TRUE@@DX_DOCDIR@/@PACKAGE@.tag: $(DX_CONFIG) $(pkginclude_HEADERS)
@DX_COND_doc_TRUE@	rm -rf @DX_DOCDIR@
@DX_COND_doc_TRUE@	$(DX_ENV) $(DX_DOXYGEN) $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
